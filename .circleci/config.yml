# version: 2.1

# workflows:
#   hello-world-pipeline:
#     jobs:
#       - say-hello
#       - hold_for_approval:
#           type: approval
#           requires:
#             - say-hello
#       - after-approval:
#           requires:
#             - hold_for_approval

# jobs:
#   say-hello:
#     docker:
#       - image: cimg/base:stable
#     steps:
#       - run: echo "Hello World"

#   after-approval:
#     docker:
#       - image: cimg/base:stable
#     steps:
#       - run: echo "This runs only after manual approval!"


version: 2.1

workflows:
  demo-flow:
    jobs:
      - build
      - test:
          requires: [build]

jobs:
  build:
    docker: [{ image: cimg/base:stable }]
    steps:
      - checkout

      - run:
          name: Configure Google credentials (optional)
          shell: /bin/bash -eo pipefail
          command: |
            if [ -n "$GOOGLE_CREDENTIALS_JSON" ]; then
              if command -v base64 >/dev/null 2>&1 && printf '%s' "$GOOGLE_CREDENTIALS_JSON" | base64 --decode > /tmp/terraform-sa.json 2>/dev/null; then
                :
              else
                printf '%s' "$GOOGLE_CREDENTIALS_JSON" > /tmp/terraform-sa.json
              fi
              chmod 600 /tmp/terraform-sa.json
              echo 'export GOOGLE_APPLICATION_CREDENTIALS=/tmp/terraform-sa.json' >> "$BASH_ENV"
              echo 'export TF_VAR_credentials_file=/tmp/terraform-sa.json' >> "$BASH_ENV"
              echo "GOOGLE_APPLICATION_CREDENTIALS will be sourced as tmp/terraform-sa.json"
              ls -l /tmp/terraform-sa.json/
            else
              echo "GOOGLE_CREDENTIALS_JSON is empty; skipping ADC setup" >&2
            fi

      # Create a file we want to share
      - run:
          name: Create file
          command: |
            mkdir -p ws
            echo "Hello from build job" > ws/message.txt

      # Create an env file we want to share
      - run:
          name: Create env file
          command: |
            mkdir -p ws
            echo 'export APP_VERSION="1.2.3"' >> ws/env.sh
            echo 'export DEPLOY_ENV="staging"' >> ws/env.sh

      # Persist to workspace (files + env.sh together)
      - persist_to_workspace:
          root: .
          paths:
            - ws

  test:
    docker: [{ image: cimg/base:stable }]
    steps:
      - attach_workspace:
          at: .

      - run:
          name: Load env vars
          command: |
            source ws/env.sh
            echo "APP_VERSION=$APP_VERSION"
            echo "DEPLOY_ENV=$DEPLOY_ENV"

      - run:
          name: Use shared file
          command: |
            cat ws/message.txt
